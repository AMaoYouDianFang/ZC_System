<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.mapper.StuMapper" >




    <insert id="insert" parameterType="com.system.po.Stu" keyProperty="stuid" useGeneratedKeys="true">
        insert into  stu (stuName, stuNameHis,  stuSex, stuSexHis, stutype, stuBirth, stuBirthHis, school, schoolHis, major, majorHis,
        stuTel, stuTelHis, address, addressHis,  motherName, motherNameHis, motherCompany, motherCompanyHis,
        motherJob, motherJobHis,
        motherTel, motherTelHis, motherBirth, motherBirthHis, motherDegree, motherDegreeHis,
        fatherName, fatherNameHis, fatherCompany, fatherCompanyHis,  fatherJob,
        fatherJobHis, fatherTel, fatherTelHis, fatherBirth, fatherBirthHis, fatherDegree, fatherDegreeHis,
        masterName,  masterNameHis, masterTel, masterTelHis, masterAddress, masterAddressHis,
        masterSex, masterSexHis, masterDegree, masterDegreeHis, masterBirth, masterBirthHis,
        schoolText, schoolTextHis, familyText, familyTextHis,
        studyText, studyTextHis,  educationText, educationTextHis, supportText, supportTextHis,
        improveText, improveTextHis,  gradeID, recordDate, recordPerson, checkDate,checkDateHis
        )
        values (#{stuname,jdbcType=VARCHAR}, '',
        #{stusex,jdbcType=VARCHAR},'', #{stutype,jdbcType=VARCHAR},
         #{stubirth,jdbcType=DATE}, '', #{school,jdbcType=VARCHAR},
         '', #{major,jdbcType=VARCHAR},'',
         #{stutel,jdbcType=VARCHAR}, '', #{address,jdbcType=VARCHAR},
         '', #{mothername,jdbcType=VARCHAR},'',
         #{mothercompany,jdbcType=VARCHAR},
         '', #{motherjob,jdbcType=VARCHAR},
         '', #{mothertel,jdbcType=VARCHAR}, '',
         #{motherbirth,jdbcType=DATE}, '',
         #{motherdegree,jdbcType=VARCHAR}, '',
         #{fathername,jdbcType=VARCHAR},'',
         #{fathercompany,jdbcType=VARCHAR},
         '', #{fatherjob,jdbcType=VARCHAR},
         '', #{fathertel,jdbcType=INTEGER},'',
         #{fatherbirth,jdbcType=DATE}, '',
         #{fatherdegree,jdbcType=VARCHAR}, '',
         #{mastername,jdbcType=VARCHAR},  '',
         #{mastertel,jdbcType=VARCHAR}, '',
         #{masteraddress,jdbcType=VARCHAR}, '',
         #{mastersex,jdbcType=VARCHAR}, '',
         #{masterdegree,jdbcType=VARCHAR}, '',
         #{masterbirth,jdbcType=VARCHAR}, '',
         #{schooltext,jdbcType=VARCHAR}, '',
         #{familytext,jdbcType=VARCHAR}, '',
         #{studytext,jdbcType=VARCHAR}, '',
         #{educationtext,jdbcType=VARCHAR}, '',
         #{supporttext,jdbcType=VARCHAR}, '',
         #{improvetext,jdbcType=VARCHAR}, '',
         #{gradeid,jdbcType=INTEGER}, #{recorddate,jdbcType=DATE}, #{recordperson,jdbcType=VARCHAR},
         #{checkdate,jdbcType=DATE}, ''
        )
    </insert>

    <update id="addStuNameByPrimaryKey" >
        update stu
        set
        stuNameHis = concat(stuNameHis,stuName,char(10)),
        stuName = #{1}
        where stuID = #{0}
    </update>

    <update id="addStuBirthByPrimaryKey" >
        update stu
        set
        stuBirthHis = concat(stuBirthHis, #{2},char(10)),
        stuBirth = #{1}
        where stuID = #{0}
    </update>

    <update id="addMotherBirthByPrimaryKey" >
        update stu
        set
        motherBirthHis = concat(motherBirthHis, #{2},char(10)),
        motherBirth = #{1}
        where stuID = #{0}
    </update>

    <update id="addFatherBirthByPrimaryKey" >
        update stu
        set
        fatherBirthHis = concat(fatherBirthHis, #{2},char(10)),
        fatherBirth = #{1}
        where stuID = #{0}
    </update>

    <select id="selectBirthByPrimaryKey" parameterType="java.lang.Integer" resultType="java.util.Date">
        SELECT stuBirth
        FROM stu
        WHERE stuID = #{stuid,jdbcType=INTEGER}
    </select>

    <select id="selectMoBirthByPrimaryKey" parameterType="java.lang.Integer" resultType="java.util.Date">
        SELECT motherBirth
        FROM stu
        WHERE stuID = #{stuid,jdbcType=INTEGER}
    </select>

    <select id="selectFaBirthByPrimaryKey" parameterType="java.lang.Integer" resultType="java.util.Date">
        SELECT fatherBirth
        FROM stu
        WHERE stuID = #{stuid,jdbcType=INTEGER}
    </select>

    <select id="selectMasterBirthByPrimaryKey" parameterType="java.lang.Integer" resultType="java.util.Date">
        SELECT masterBirth
        FROM stu
        WHERE stuID = #{stuid,jdbcType=INTEGER}
    </select>

    <select id="selectCheckDateByPrimaryKey" parameterType="java.lang.Integer" resultType="java.util.Date">
        SELECT checkDate
        FROM stu
        WHERE stuID = #{stuid,jdbcType=INTEGER}
    </select>



    <update id="addMajorByPrimaryKey" >
        update stu
        set
        majorHis = concat(majorHis,major,char(10)),
        major = #{1}
        where stuID = #{0}
    </update>

    <update id="addSchoolByPrimaryKey" >
        update stu
        set
            schoolHis = concat(schoolHis,school,char(10)),
            school = #{1}
        where stuID = #{0}
    </update>

    <update id="addStuTelByPrimaryKey" >
        update stu
        set
        stuTelHis = concat(stuTelHis,stuTel,char(10)),
        stuTel = #{1}
        where stuID = #{0}
    </update>

    <update id="addMotherNameByPrimaryKey" >
        update stu
        set
        motherNameHis = concat(motherNameHis,motherName,char(10)),
        motherName = #{1}
        where stuID = #{0}
    </update>

    <update id="addMoCompanyByPrimaryKey" >
        update stu
        set
        motherCompanyHis = concat(motherCompanyHis,motherCompany,char(10)),
        motherCompany = #{1}
        where stuID = #{0}
    </update>

    <update id="addMoJobByPrimaryKey" >
        update stu
        set
        motherJobHis = concat(motherJobHis,motherJob,char(10)),
        motherJob = #{1}
        where stuID = #{0}
    </update>

    <update id="addMoTelByPrimaryKey" >
        update stu
        set
        motherTelHis = concat(motherTelHis,motherTel,char(10)),
        motherTel = #{1}
        where stuID = #{0}
    </update>

    <update id="addMoDegreeByPrimaryKey" >
        update stu
        set
        motherDegreeHis = concat(motherDegreeHis,motherDegree,char(10)),
        motherDegree = #{1}
        where stuID = #{0}
    </update>

    <update id="addFaDegreeByPrimaryKey" >
        update stu
        set
        fatherDegreeHis = concat(fatherDegreeHis,fatherDegree,char(10)),
        fatherDegree = #{1}
        where stuID = #{0}
    </update>


    <update id="addFaNameByPrimaryKey" >
        update stu
        set
        fatherNameHis = concat(fatherNameHis,fatherName,char(10)),
        fatherName = #{1}
        where stuID = #{0}
    </update>

    <update id="addFaCompanyByPrimaryKey" >
        update stu
        set
        fatherCompanyHis = concat(fatherCompanyHis,fatherCompany,char(10)),
        fatherCompany = #{1}
        where stuID = #{0}
    </update>


    <update id="addFaJobByPrimaryKey" >
        update stu
        set
        fatherJobHis = concat(fatherJobHis,fatherJob,char(10)),
        fatherJob = #{1}
        where stuID = #{0}
    </update>

    <update id="addFaTelByPrimaryKey" >
        update stu
        set
        fatherTelHis = concat(fatherTelHis,fatherTel,char(10)),
        fatherTel = #{1}
        where stuID = #{0}
    </update>

    <update id="addAddressByPrimaryKey" >
        update stu
        set
        addressHis = concat(addressHis,address,char(10)),
        address = #{1}
        where stuID = #{0}
    </update>


    <update id="addMasterByPrimaryKey" >
        update stu
        set
        masterNameHis = concat(masterNameHis,masterName,char(10)),
        masterName = #{1}

        where stuID = #{0}
    </update>


    <update id="addMasterTelByPrimaryKey" >
        update stu
        set
        masterTelHis = concat(masterTelHis,masterTel,char(10)),
        masterTel = #{1}
        where stuID = #{0}
    </update>

    <update id="addStuSexByPrimaryKey" >
        update stu
        set
        stuSexHis = concat(stuSexHis,stuSex,char(10)),
        stuSex = #{1}
        where stuID = #{0}
    </update>

    <update id="addMasterAddressByPrimaryKey" >
        update stu
        set
        masterAddressHis = concat(masterAddressHis,masterAddress,char(10)),
        masterAddress = #{1}
        where stuID = #{0}
    </update>

    <update id="addMasterDegreeByPrimaryKey" >
        update stu
        set
        masterDegreeHis = concat(masterDegreeHis,masterDegree,char(10)),
        masterDegree = #{1}
        where stuID = #{0}
    </update>

    <update id="addMasterSexByPrimaryKey" >
        update stu
        set
        masterSexHis = concat(masterSexHis,masterSex,char(10)),
        masterSex = #{1}
        where stuID = #{0}
    </update>

    <update id="addMasterBirthByPrimaryKey" >
        update stu
        set
        masterBirthHis = concat(masterBirthHis,#{2},char(10)),
        masterBirth = #{1}
        where stuID = #{0}
    </update>

    <update id="addCheckDateByPrimaryKey" >
        update stu
        set
        checkDateHis = concat(checkDateHis,#{2},char(10)),
        checkDate = #{1}
        where stuID = #{0}
    </update>


    <update id="addSchoolTextByPrimaryKey" >
        update stu
        set
        schoolText = concat(schoolText,#{1},char(10))
        where stuID = #{0}
    </update>

    <update id="addFamilyTextByPrimaryKey" >
        update stu
        set
        familyText = concat(familyText,#{1},char(10))
        where stuID = #{0}
    </update>


    <update id="addStudyTextByPrimaryKey" >
        update stu
        set
        studyText = concat(studyText,#{1},char(10))
        where stuID = #{0}
    </update>



    <update id="addEducationTextByPrimaryKey" >
        update stu
        set
        educationText = concat(educationText,#{1},char(10))
        where stuID = #{0}
    </update>



    <update id="addSupportTextByPrimaryKey" >
        update stu
        set
        supportText = concat(supportText,#{1},char(10))
        where stuID = #{0}
    </update>

    <update id="addImproveTextByPrimaryKey" >
        update stu
        set
        improveText = concat(improveText,#{1},char(10))
        where stuID = #{0}
    </update>



    <select id="countStu" resultType="java.lang.Integer" >
        select count(*) from stu
    </select>


    <select id="countStuByGrade" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        gradeID = #{gradeid,jdbcType=INTEGER}
    </select>

    <select id="countStuByDate" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        recordDate  BETWEEN #{0} AND #{1}
    </select>

    <select id="countStuByBirth" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        DATEDIFF(CAST(CONCAT(YEAR(NOW()),DATE_FORMAT(stuBirth,'-%m-%d'))AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) = 7
        OR   <!--or后面的解决跨年问题-->
        DATEDIFF(CAST(CONCAT(YEAR(NOW())+1,DATE_FORMAT(stuBirth,'-%m-%d'))AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) = 7
        OR <!--补充闰年2月29日的生日方法-->
        (
        f_not_leap_year(YEAR(NOW()))
        AND DATE_FORMAT(stuBirth,'-%m-%d')= '-02-29'
        AND DATEDIFF(CAST(CONCAT('2000',DATE_FORMAT(stuBirth,'-%m-%d'))AS DATE),CAST(CONCAT('2000',DATE_FORMAT(NOW(),'-%m-%d')) AS DATE)) = 7)
    </select>

    <select id="countStuByPay" resultType="java.lang.Integer" >
        select count(distinct stuID) from lesson
        WHERE
       DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) = 7
    </select>

    <select id="countStuByPayAndGrade" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{gradeid,jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--//未缴费学员 （分页 //全部 全部）-->
    <select id="countStuByUnPayStu" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        stu.stuID NOT IN
        (
        SELECT distinct lesson.stuID
        FROM lesson
        WHERE
         DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--//分页 全部 有电话-->
    <select id="countStuByUnPayStuTel" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        (stu.stuTel !=''
        OR
        stu.motherTel !=''
        OR
        stu.fatherTel !='')
        AND
        stu.stuID NOT IN
        (
        SELECT distinct lesson.stuID
        FROM lesson
        WHERE
         DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--//分页 全部 无电话-->
    <select id="countStuByUnPayStuNoTel" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        stu.stuTel =''
        AND
        stu.motherTel=''
        AND
        stu.fatherTel=''
        AND
        stu.stuID NOT IN
        (
        SELECT distinct lesson.stuID
        FROM lesson
        WHERE
         DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>
    <!--//未缴费学生（分年级  全部）-->
    <select id="countUnPayStuByGrade" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        stu.gradeID = #{gradeid,jdbcType=INTEGER}
        AND
        stu.stuID NOT IN
        (
        SELECT distinct lesson.stuID
        FROM lesson
        WHERE
         DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>
    <!--//分页 分年级 有电话-->
    <select id="countUnPayStuByGradeTel" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        (stu.stuTel !=''
        OR
        stu.motherTel !=''
        OR
        stu.fatherTel !='')
        AND
        stu.gradeID = #{gradeid,jdbcType=INTEGER}
        AND
        stu.stuID NOT IN
        (
        SELECT distinct lesson.stuID
        FROM lesson
        WHERE
         DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>
    <!--// 分年级 没有电话-->
    <select id="countUnPayStuByGradeNoTel" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        stu.stuTel =''
        AND
        stu.motherTel=''
        AND
        stu.fatherTel=''
        AND
        stu.gradeID = #{gradeid,jdbcType=INTEGER}
        AND
        stu.stuID NOT IN
        (
        SELECT distinct lesson.stuID
        FROM lesson
        WHERE
         DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <delete id="deleteByStuID" parameterType="java.lang.Integer" >
        delete from stu
        where stuID = #{stuID,jdbcType=INTEGER}
    </delete>

    <update id="updateByStuID" parameterType="com.system.po.Stu">
        update stu
        set stuName = #{stuname,jdbcType=VARCHAR},
        stutype = #{stutype,jdbcType=VARCHAR},
        stuBirth = #{stubirth,jdbcType=DATE},
        stuSex = #{stusex,jdbcType=VARCHAR},
        school = #{school,jdbcType=VARCHAR},
        major = #{major,jdbcType=VARCHAR},
        stuTel = #{stutel,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        motherName = #{mothername,jdbcType=VARCHAR},
        motherCompany = #{mothercompany,jdbcType=VARCHAR},
        motherJob = #{motherjob,jdbcType=VARCHAR},
        motherTel = #{mothertel,jdbcType=VARCHAR},
        motherBirth = #{motherbirth,jdbcType=DATE},
        motherDegree = #{motherdegree,jdbcType=VARCHAR},
        fatherName = #{fathername,jdbcType=VARCHAR},
        fatherJob = #{fatherjob,jdbcType=VARCHAR},
        fatherCompany = #{fathercompany,jdbcType=VARCHAR},
        fatherTel = #{fathertel,jdbcType=VARCHAR},
        fatherBirth = #{fatherbirth,jdbcType=DATE},
        fatherDegree = #{fatherdegree,jdbcType=VARCHAR},
        masterName = #{mastername,jdbcType=VARCHAR},
        masterTel = #{mastertel,jdbcType=VARCHAR},
        masterAddress = #{masteraddress,jdbcType=VARCHAR},
        masterDegree =#{masterdegree,jdbcType=VARCHAR},
        masterSex = #{mastersex,jdbcType=VARCHAR},
        masterBirth = #{masterbirth,jdbcType=DATE},
        schoolTextHis = #{schooltexthis,jdbcType=VARCHAR},
        familyTextHis = #{familytexthis,jdbcType=VARCHAR},
        studyTextHis = #{studytexthis,jdbcType=VARCHAR},
        educationTextHis = #{educationtexthis,jdbcType=VARCHAR},
        supportTextHis = #{supporttexthis,jdbcType=VARCHAR},
        improveTextHis = #{improvetexthis,jdbcType=VARCHAR},
        checkDate = #{checkdate,jdbcType=DATE},
        gradeID = #{gradeid,jdbcType=INTEGER}
        where stuID = #{stuid,jdbcType=INTEGER}
    </update>


    <update id="updataStuHis" parameterType="java.lang.Integer">
        update stu
        set
        schoolTextHis = concat(schoolTextHis,schoolText),
        familyTextHis = concat(familyTextHis,familyText),
        studyTextHis = concat(studyTextHis,studyText),
        educationTextHis = concat(educationTextHis,educationText),
        supportTextHis = concat(supportTextHis,supportText),
        improveTextHis = concat(improveTextHis,improveText),
        schoolText = '',
        familyText = '',
        studyText = '',
        educationText = '',
        supportText = '',
        improveText = ''
        where stuID = #{stuid,jdbcType=INTEGER}
    </update>

    <update id="updataGradeID">
        update stu
        set
        gradeID = gradeID + 1
        where gradeID &lt; 17
    </update>

    <update id="updataGradeDec">
        update stu
        set
        gradeID = gradeID - 1
        where gradeID &lt; 17
    </update>

    <!--已缴费学生的数量  （全部年级 全部学科 全部类型）-->
    <select id="countStuByPayStu" resultType="java.lang.Integer" >
        select count(distinct stuID) from lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <!--已缴费学生的数量  （学科 类型）-->
    <select id="countPayBySubAndType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        lesson.subjectID = #{0}
        AND
        lesson.typeID = #{1}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0

    </select>

    <!--已缴费学生的数量 （年级 类型）-->
    <select id="countPayByGradeAndType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{0}
        AND
        lesson.typeID = #{1}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <!--//已缴费学生的数量（年级 学科）-->
    <select id="countPayByGradeAndSub" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{0}
        AND
         lesson.subjectID = #{1}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <!--已缴费学生的数量（年级）-->
    <select id="countPayByGrade" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{gradeid, jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <!--已缴费学生的数量（学科）-->
    <select id="countPayBySub" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        lesson.subjectID = #{subjectid, jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <!--已缴费学生的数量（类型）-->
    <select id="countPayByType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        lesson.typeID = #{typeid, jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <!--已缴费学生的数量（年级 学科 类型）-->
    <select id="countPayByGradeSubType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{0}
        AND
        lesson.subjectID = #{1}
        AND
        lesson.typeID = #{2}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) >= 0
        AND
        DATEDIFF(CAST(DATE_FORMAT(NOW(),'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d') AS DATE)) >= 0
    </select>

    <select id="countOutstandStu" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from stu
        WHERE
        stu.stutype = '优质学生'
    </select>

    <select id="selectStuTel" parameterType="java.lang.String" resultType="com.system.po.Stu">
        select * from stu
        WHERE
        stuTel = #{tel, jdbcType=VARCHAR}
    </select>

    <select id="selectMotherTel" parameterType="java.lang.String" resultType="com.system.po.Stu">
        select * from stu
        WHERE
        motherTel = #{tel, jdbcType=VARCHAR}
    </select>

    <select id="selectFatherTel" parameterType="java.lang.String" resultType="com.system.po.Stu">
        select * from stu
        WHERE
        fatherTel = #{tel, jdbcType=VARCHAR}
    </select>


    <select id="countLister" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu
        WHERE
        stu.recordPerson = #{0}
        AND
        stu.recordDate BETWEEN #{1} AND #{2}
    </select>

    <select id="countUpdater" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu
        WHERE
        stu.stuID  IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE lesson.operator = #{0}
        AND
        lesson.recordDate BETWEEN #{1} AND #{2}
        UNION
        SELECT DISTINCT exam.stuID
        FROM exam
        WHERE exam.updatePerson = #{0}
        AND
        exam.recordDate BETWEEN #{1} AND #{2}
        )
    </select>

    <!--1  新录入  负责人-->
    <select id="countLeaderReceiveByGradePay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.leaderSign = ''
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--1  新录入  校长-->
    <select id="countMasterReceiveByGradePay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.masterSign = ''
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--2  新录入 负责人-->
    <select id="countLeaderReceiveByGradeUnPay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.leaderSign = ''
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID NOT IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--2  新录入 校长-->
    <select id="countMasterReceiveByGradeUnPay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.masterSign = ''
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID NOT IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>


    <!--3  新录入 负责人-->
    <select id="countLeaderReceiveByGrade" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.leaderSign = ''
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>

    <!--3  新录入 校长-->
    <select id="countMasterReceiveByGrade" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.masterSign = ''
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>

    <!--1 更新信息，根据年纪，已经缴费 负责人-->
    <select id="countLeaderUpdateByGradePay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.leaderSign != ''
        AND
        sign.leaderSignID =0
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>


    <!--1 更新信息，根据年纪，已经缴费 校长-->
    <select id="countMasterUpdateByGradePay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.masterSign != ''
        AND
        sign.masterSignID =0
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--2 更新信息，根据年纪，未缴费 负责人-->
    <select id="countLeaderUpdateByGradeUnPay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.leaderSign != ''
        AND
        sign.leaderSignID =0
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID NOT IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>

    <!--2 更新信息，根据年纪，未缴费 校长-->
    <select id="countMasterUpdateByGradeUnPay" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.masterSign != ''
        AND
        sign.masterSignID =0
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
        AND
        stu.stuID NOT IN
        (
        SELECT DISTINCT lesson.stuID
        FROM lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonEnd,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
        )
    </select>


    <!--3 更新信息，根据年纪，缴费和未缴费 负责人-->
    <select id="countLeaderUpdateByGrade" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.leaderSign != ''
        AND
        sign.leaderSignID =0
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>

    <!--3 更新信息，根据年纪，缴费和未缴费 校长-->
    <select id="countMasterUpdateByGrade" parameterType="java.util.List" resultType="java.lang.Integer">
        select
        count(distinct stu.stuID)
        from stu,sign
        WHERE
        stu.stuID = sign.stuID
        AND
        sign.masterSign != ''
        AND
        sign.masterSignID = 0
        AND
        stu.gradeID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </select>



    <select id="countStuBySchool" parameterType="java.lang.String" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        school = #{schoolName,jdbcType=VARCHAR}
    </select>

    <select id="countStuByMajor" parameterType="java.lang.String" resultType="java.lang.Integer" >
        select count(*) from stu
        WHERE
        major = #{majorName,jdbcType=VARCHAR}
    </select>

    <!--统计姓名重复的学生人数-->
    <select id="countStuBySameName" resultType="java.lang.Integer">
        SELECT count(*) FROM stu
        WHERE
        stuName IN
        (
          SELECT stuName
          FROM stu
          GROUP BY stuName
          HAVING count(*) >= 2
        )
    </select>

    <select id="countCheck"  resultType="java.lang.Integer">
        select
        count(*)
        FROM stu
        WHERE
        stu.checkDate BETWEEN #{1} AND #{2}
        AND
        stu.major = #{0}
    </select>

    <!--预缴费学生的数量  （全部年级 全部学科 全部类型）-->
    <select id="countPreStuByPayStu" resultType="java.lang.Integer" >
        select count(distinct stuID) from lesson
        WHERE
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--预缴费学生的数量  （学科 类型）-->
    <select id="countPrePayBySubAndType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        lesson.subjectID = #{0}
        AND
        lesson.typeID = #{1}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0

    </select>

    <!--预缴费学生的数量 （年级 类型）-->
    <select id="countPrePayByGradeAndType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{0}
        AND
        lesson.typeID = #{1}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--//预缴费学生的数量（年级 学科）-->
    <select id="countPrePayByGradeAndSub" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{0}
        AND
        lesson.subjectID = #{1}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--预缴费学生的数量（年级）-->
    <select id="countPrePayByGrade" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{gradeid, jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--预缴费学生的数量（学科）-->
    <select id="countPrePayBySub" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        lesson.subjectID = #{subjectid, jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--预缴费学生的数量（类型）-->
    <select id="countPrePayByType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        lesson.typeID = #{typeid, jdbcType=INTEGER}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--预缴费学生的数量（年级 学科 类型）-->
    <select id="countPrePayByGradeSubType" resultType="java.lang.Integer" >
        select count(distinct stu.stuID) from lesson,stu
        WHERE
        stu.stuID = lesson.stuID
        AND
        stu.gradeID = #{0}
        AND
        lesson.subjectID = #{1}
        AND
        lesson.typeID = #{2}
        AND
        DATEDIFF(CAST(DATE_FORMAT(lesson.lessonStart,'%y-%m-%d')AS DATE),CAST(DATE_FORMAT(NOW(),'%y-%m-%d') AS DATE)) > 0
    </select>

    <!--获取录入人-->
    <select id="selectRecordPersonByIndex" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT recordPerson FROM stu
        WHERE stuID = #{stuid,jdbcType=INTEGER}
    </select>

    <!--更新录入人-->
    <update id="updateRecordPersonByIndex" >
        update stu
        set
        recordPerson = #{1}
        where stuID = #{0}
    </update>
</mapper>